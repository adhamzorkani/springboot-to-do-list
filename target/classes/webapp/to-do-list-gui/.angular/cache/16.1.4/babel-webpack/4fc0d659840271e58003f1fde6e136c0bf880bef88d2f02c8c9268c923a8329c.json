{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserService {\n  constructor(http) {\n    this.http = http;\n    this.userServiceURL = \"http://localhost:8080/api/users\";\n  }\n  login(user) {\n    return this.http.post(this.userServiceURL + \"/login\", user);\n  }\n  getUsers() {\n    return this.http.get(this.userServiceURL);\n  }\n  getUser(id) {\n    return this.http.get(this.userServiceURL + '/' + id);\n  }\n  saveUser(user) {\n    return this.http.post(this.userServiceURL, user);\n  }\n  updateUser(user, id) {\n    return this.http.put(this.userServiceURL + '/' + id, user);\n  }\n  deleteUser(id) {\n    return this.http.delete(this.userServiceURL + '/' + id);\n  }\n  getUserCards(id) {\n    return this.http.get(this.userServiceURL + '/' + id + '/cards');\n  }\n  setID(id) {\n    this.ID = id;\n  }\n}\nUserService.ɵfac = function UserService_Factory(t) {\n  return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n};\nUserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserService,\n  factory: UserService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["UserService","constructor","http","userServiceURL","login","user","post","getUsers","get","getUser","id","saveUser","updateUser","put","deleteUser","delete","getUserCards","setID","ID","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["G:\\Ejada\\springboot-to-do-list\\src\\main\\resources\\webapp\\to-do-list-gui\\src\\app\\user\\user.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { User } from './user';\r\nimport { Observable } from 'rxjs';\r\nimport { Card } from '../card/card';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n  private userServiceURL = \"http://localhost:8080/api/users\";\r\n  private ID!: number;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  login(user: User): Observable<User> {\r\n    return this.http.post<User>(this.userServiceURL + \"/login\", user);\r\n  }\r\n\r\n  getUsers(): Observable<User[]> {\r\n    return this.http.get<User[]>(this.userServiceURL);\r\n  }\r\n\r\n  getUser(id: number): Observable<User> {\r\n    return this.http.get<User>(this.userServiceURL + '/'+ id);\r\n  }\r\n\r\n  saveUser(user: User): Observable<User> {\r\n    return this.http.post<User>(this.userServiceURL, user);\r\n  }\r\n  \r\n  updateUser(user: User, id: number): Observable<User> {\r\n    return this.http.put<User>(this.userServiceURL + '/' + id, user);\r\n  }\r\n\r\n  deleteUser(id: number): Observable<any> {\r\n    return this.http.delete<any>(this.userServiceURL+ '/' + id);\r\n  }\r\n\r\n  getUserCards(id: number): Observable<Card[]> {\r\n    return this.http.get<Card[]>(this.userServiceURL + '/' + id + '/cards')\r\n  }\r\n\r\n  setID(id: number){\r\n    this.ID = id\r\n  }\r\n}\r\n"],"mappings":";;AAUA,OAAM,MAAOA,WAAW;EAKtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAHhB,KAAAC,cAAc,GAAG,iCAAiC;EAGlB;EAExCC,KAAKA,CAACC,IAAU;IACd,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAO,IAAI,CAACH,cAAc,GAAG,QAAQ,EAAEE,IAAI,CAAC;EACnE;EAEAE,QAAQA,CAAA;IACN,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAAS,IAAI,CAACL,cAAc,CAAC;EACnD;EAEAM,OAAOA,CAACC,EAAU;IAChB,OAAO,IAAI,CAACR,IAAI,CAACM,GAAG,CAAO,IAAI,CAACL,cAAc,GAAG,GAAG,GAAEO,EAAE,CAAC;EAC3D;EAEAC,QAAQA,CAACN,IAAU;IACjB,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAO,IAAI,CAACH,cAAc,EAAEE,IAAI,CAAC;EACxD;EAEAO,UAAUA,CAACP,IAAU,EAAEK,EAAU;IAC/B,OAAO,IAAI,CAACR,IAAI,CAACW,GAAG,CAAO,IAAI,CAACV,cAAc,GAAG,GAAG,GAAGO,EAAE,EAAEL,IAAI,CAAC;EAClE;EAEAS,UAAUA,CAACJ,EAAU;IACnB,OAAO,IAAI,CAACR,IAAI,CAACa,MAAM,CAAM,IAAI,CAACZ,cAAc,GAAE,GAAG,GAAGO,EAAE,CAAC;EAC7D;EAEAM,YAAYA,CAACN,EAAU;IACrB,OAAO,IAAI,CAACR,IAAI,CAACM,GAAG,CAAS,IAAI,CAACL,cAAc,GAAG,GAAG,GAAGO,EAAE,GAAG,QAAQ,CAAC;EACzE;EAEAO,KAAKA,CAACP,EAAU;IACd,IAAI,CAACQ,EAAE,GAAGR,EAAE;EACd;;AArCWV,WAAW,C;mBAAXA,WAAW,EAAAmB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAXtB,WAAW,C;SAAXA,WAAW;EAAAuB,OAAA,EAAXvB,WAAW,CAAAwB,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}